{"version":3,"sources":["components/SearchTable/SearchTableItem/index.js","components/SearchTable/index.js","components/QuantityInput/index.js","components/AutoCompleteField/Template/Template.js","components/AutoCompleteField/AutoCompleteField.js","components/Widget/Widget.js","App.js","serviceWorker.js","index.js"],"names":["SearchTableItem","_ref","data","react_default","a","createElement","card","title","direction","subTitle","concat","price","className","timeInFlight","date","quantity","ticketType","results","SearchTable","map","el","i","key","Component","state","_this2","this","console","log","inputtext","id","value","onChange","e","setState","target","htmlFor","Template","airportName","notResults","NO_RESULTS_FOUND","AutoCompleteField","suggestions","_onSelect","_this","props","onSelect","Object","objectSpread","name","_onBlur","suggestBrands","query","destinations","filter","toLowerCase","startsWith","length","push","_this$props","placeholder","extraClass","autocomplete","inputClassName","completeMethod","itemTemplate","onBlur","Widget","origin","destination","_setValue","defineProperty","_this$state","components_AutoCompleteField_AutoCompleteField","App","components_Widget_Widget","QuantityInput","components_SearchTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc8de8e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from 'primereact/card';\r\n\r\nexport default ({ data }) => (\r\n   <Card title={data.direction} subTitle={`${data.price} BYN`} className=\"search-table-item\">\r\n       {/* <span className=\"search-table-item__direction\">{data.direction}</span>\r\n       <span className=\"search-table-item__price\">{data.price}</span> */}\r\n       <p className=\"search-table-item__time\">Time in flight: {data.timeInFlight}</p>\r\n       <p className=\"search-table-item__date\">Date: {data.date}</p>\r\n       <p className=\"search-table-item__quantity\">Quantity: {data.quantity}</p>\r\n       {\r\n            data.ticketType === 'EP' && <span className=\"search-table-item__quantity\">Promotional ticket</span>\r\n       }\r\n   </Card>\r\n) ","import React, { Component } from 'react';\r\nimport './SearchTable.css';\r\nimport SearchTableItem from './SearchTableItem';\r\n\r\nconst results = [\r\n    {\r\n        \"direction\": \"Paris\",\r\n        \"price\": \"376\",\r\n        \"timeInFlight\": \"1:24:00\",\r\n        \"date\": \"17 December\",\r\n        \"quantity\": \"8\",\r\n        \"ticketType\": \"EP\"\r\n    },\r\n    {\r\n        \"direction\": \"Barcelona\",\r\n        \"price\": \"140\",\r\n        \"timeInFlight\": \"4:02:00\",\r\n        \"date\": \"11 December\",\r\n        \"quantity\": \"2\",\r\n        \"ticketType\": \"EP\"\r\n    },\r\n    {\r\n        \"direction\": \"Milan\",\r\n        \"price\": \"411\",\r\n        \"timeInFlight\": \"3:04:00\",\r\n        \"date\": \"4 January\",\r\n        \"quantity\": \"12\",\r\n        \"ticketType\": \"EC\"\r\n    },\r\n    {\r\n        \"direction\": \"Dublin\",\r\n        \"price\": \"755\",\r\n        \"timeInFlight\": \"5:17:00\",\r\n        \"date\": \"1 February\",\r\n        \"quantity\": \"40\",\r\n        \"ticketType\": \"EP\"\r\n    },\r\n    {\r\n        \"direction\": \"London\",\r\n        \"price\": \"227\",\r\n        \"timeInFlight\": \"4:41:00\",\r\n        \"date\": \"1 December\",\r\n        \"quantity\": \"5\",\r\n        \"ticketType\": \"EP\"\r\n    },\r\n    {\r\n        \"direction\": \"Faroe Islands\",\r\n        \"price\": \"980\",\r\n        \"timeInFlight\": \"1:24:00\",\r\n        \"date\": \"8 March\",\r\n        \"quantity\": \"7\",\r\n        \"ticketType\": \"EC\"\r\n    }\r\n];\r\n class SearchTable extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-table\">\r\n        {\r\n            results.map((el, i) =>(\r\n                <SearchTableItem key={i} data={el} />\r\n            ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n export default SearchTable;","import React, { Component } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nclass SearchTable extends Component {\r\n    state = {\r\n        quantity: ''\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div className=\"input-wrapper\">\r\n                <InputText\r\n                    id=\"quantity\"\r\n                    value={this.state.quantity}\r\n                    onChange={(e) => this.setState({ quantity: e.target.value })}\r\n                />\r\n                <label htmlFor=\"quantity\">Quantity</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchTable;","import React from 'react';\r\n\r\nconst NO_RESULTS_FOUND_CLASS_NAME = 'widget__no-result-found';\r\n\r\nconst Template = ({ airportName, notResults }) => (\r\n  <div className={`${notResults && NO_RESULTS_FOUND_CLASS_NAME} widget__airport'`}>\r\n    <div>{airportName}</div>\r\n  </div>\r\n);\r\n\r\nexport default Template;\r\n","import React, { Component } from 'react';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\n\r\nimport Template from './Template/Template';\r\nimport './styles.css';\r\n\r\nconst NO_RESULTS_FOUND = 'В любые направления';\r\nconst className = 'widget__auto-complete-field';\r\n\r\nclass AutoCompleteField extends Component {\r\n  state = {\r\n    suggestions: [],\r\n  };\r\n\r\n  _onSelect = e => this.props.onSelect({ name: this.props.name, ...e.value });\r\n\r\n  _onBlur = e => this.props.onSelect({ name: this.props.name, ...this.state.suggestions[0] });\r\n\r\n  suggestBrands = e => {\r\n    const { query } = e;\r\n    const { destinations } = this.props;\r\n    const suggestions = destinations.filter(({ airportName }) => airportName.toLowerCase().startsWith(query.toLowerCase()));\r\n\r\n    if (!suggestions.length) {\r\n      suggestions.push({\r\n        airportName: NO_RESULTS_FOUND,\r\n        notResults: true,\r\n      });\r\n    }\r\n    \r\n    this.setState({ suggestions });\r\n  }\r\n\r\n  render() {\r\n    const { suggestions } = this.state;\r\n    const { name, onChange, value, placeholder, extraClass } = this.props;\r\n\r\n    return (\r\n      <span className='widget__field'>\r\n        <AutoComplete\r\n          inputClassName={`${className} ${extraClass}`}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          onSelect={this._onSelect}\r\n          suggestions={suggestions}\r\n          completeMethod={this.suggestBrands}\r\n          itemTemplate={Template}\r\n          onBlur={this._onBlur}\r\n        />\r\n        <span className='widget__field-placeholder'>{placeholder}</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoCompleteField;\r\n","import React, { Component } from 'react';\r\n\r\nimport AutoCompleteField from '../AutoCompleteField/AutoCompleteField';\r\nimport './styles.css';\r\n\r\nconst destinations = [\r\n  {\r\n    airportName: 'Амстердам (AMS), NL',\r\n  },\r\n  {\r\n    airportName: 'Париж (PAR), FR',\r\n  },\r\n  {\r\n    airportName: 'Барселона (BCN), ES',\r\n  },\r\n  {\r\n    airportName: 'Берлин (BER), DE',\r\n  },\r\n  {\r\n    airportName: 'Санкт-Петербург (LED), RU',\r\n  },\r\n  {\r\n    airportName: 'Тель-Авив (TLV), IL',\r\n  },\r\n];\r\n\r\nclass Widget extends Component {\r\n  state = {\r\n    origin: 'Минск, Беларусь',\r\n    destination: '',\r\n  };\r\n\r\n  _setValue = (name, value) => this.setState({ [name]: value })\r\n\r\n  onSelect = data => {\r\n    if (data) {\r\n      const { name, airportName: value, notResults } = data;\r\n\r\n      this._setValue(name, value);\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value, target: { name } } = e;\r\n\r\n    this._setValue(name, value);\r\n  };\r\n\r\n  render() {\r\n    const { origin, destination } = this.state;\r\n\r\n    return (\r\n      <form className='widget'>\r\n        <AutoCompleteField\r\n          name='origin'\r\n          placeholder='откуда'\r\n          value={origin}\r\n          onSelect={this.onSelect}\r\n          onChange={this.onChange}\r\n          destinations={destinations}\r\n          extraClass='widget__current-location'\r\n        />\r\n        <AutoCompleteField\r\n          name='destination'\r\n          placeholder='куда'\r\n          value={destination}\r\n          onSelect={this.onSelect}\r\n          onChange={this.onChange}\r\n          destinations={destinations}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Widget;\r\n","import React, { Component } from 'react';\r\nimport './components/SearchTable'\r\nimport SearchTable from './components/SearchTable';\r\nimport QuantityInput from './components/QuantityInput';\r\n\r\nimport { Widget } from './components';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Widget />\r\n        <QuantityInput />\r\n        <SearchTable />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}